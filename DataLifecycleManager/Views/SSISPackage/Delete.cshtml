@model DataLifecycleManager.Presentation.ViewModels.SSISPackage.SSISPackageViewModel

@{
    ViewData["Title"] = "Delete SSIS Package";
}

<div class="container mt-4">
    <div class="row">
        <div class="col-md-8 mx-auto">
            <div class="card shadow border-danger">
                <div class="card-header bg-danger text-white">
                    <h4 class="mb-0"><i class="fas fa-trash me-2"></i>Delete SSIS Package</h4>
                </div>
                <div class="card-body">
                    <div class="alert alert-warning">
                        <i class="fas fa-exclamation-triangle me-2"></i>
                        <strong>Warning!</strong> Are you sure you want to delete this SSIS package?
                    </div>
                    <dl class="row">
                        <dt class="col-sm-4">Folder</dt>
                        <dd class="col-sm-8">@Model.FolderName</dd>
                        
                        <dt class="col-sm-4">Project</dt>
                        <dd class="col-sm-8">@Model.ProjectName</dd>
                        
                        <dt class="col-sm-4">Package Name</dt>
                        <dd class="col-sm-8">@Model.PackageName</dd>
                        
                        <dt class="col-sm-4">Description</dt>
                        <dd class="col-sm-8">@(Model.Description ?? "No description")</dd>
                        
                        <dt class="col-sm-4">Status</dt>
                        <dd class="col-sm-8">
                            @if (Model.Status == DataLifecycleManager.Domain.Enums.SSISPackageStatus.Active)
                            {
                                <span class="badge bg-success">Active</span>
                            }
                            else
                            {
                                <span class="badge bg-secondary">Inactive</span>
                            }
                        </dd>
                        
                        <dt class="col-sm-4">Timeout Minutes</dt>
                        <dd class="col-sm-8">@Model.TimeoutMinutes</dd>
                        
                        <dt class="col-sm-4">Package Parameters</dt>
                        <dd class="col-sm-8">
                            @if (!string.IsNullOrEmpty(Model.PackageParameters))
                            {
                                <code>@Model.PackageParameters</code>
                            }
                            else
                            {
                                <small class="text-muted">No parameters</small>
                            }
                        </dd>
                        
                        <dt class="col-sm-4">Last Execution Date</dt>
                        <dd class="col-sm-8">@(Model.LastExecutionDate?.ToString("yyyy-MM-dd HH:mm:ss") ?? "Never executed")</dd>
                        
                        <dt class="col-sm-4">Last Execution Status</dt>
                        <dd class="col-sm-8">
                            @if (Model.LastExecutionStatus.HasValue)
                            {
                                @if (Model.LastExecutionStatus == DataLifecycleManager.Domain.Enums.ExecutionStatus.Succeeded)
                                {
                                    <span class="badge bg-success">@Model.LastExecutionStatus</span>
                                }
                                else if (Model.LastExecutionStatus == DataLifecycleManager.Domain.Enums.ExecutionStatus.Failed)
                                {
                                    <span class="badge bg-danger">@Model.LastExecutionStatus</span>
                                }
                                else
                                {
                                    <span class="badge bg-warning">@Model.LastExecutionStatus</span>
                                }
                            }
                            else
                            {
                                <small class="text-muted">-</small>
                            }
                        </dd>

                        <dt class="col-sm-4">Created</dt>
                        <dd class="col-sm-8">
                            @Model.CreatedAt.ToLocalTime().ToString("yyyy-MM-dd HH:mm:ss")
                            @if (!string.IsNullOrEmpty(Model.CreatedBy))
                            {
                                <text>by @Model.CreatedBy</text>
                            }
                        </dd>

                        @if (Model.LastModifiedAt.HasValue)
                        {
                            <dt class="col-sm-4">Last Modified</dt>
                            <dd class="col-sm-8">
                                @Model.LastModifiedAt.Value.ToLocalTime().ToString("yyyy-MM-dd HH:mm:ss")
                                @if (!string.IsNullOrEmpty(Model.LastModifiedBy))
                                {
                                    <text>by @Model.LastModifiedBy</text>
                                }
                            </dd>
                        }
                    </dl>
                    <form asp-action="Delete" method="post">
                        <input type="hidden" asp-for="Id" />
                        <div class="d-flex justify-content-between">
                            <a asp-action="Index" class="btn btn-secondary">
                                <i class="fas fa-arrow-left me-2"></i>Back to List
                            </a>
                            <button type="submit" class="btn btn-danger">
                                <i class="fas fa-trash me-2"></i>Confirm Delete
                            </button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>
