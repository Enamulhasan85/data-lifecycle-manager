@model DataLifecycleManager.Presentation.ViewModels.SSISPackage.SSISPackageViewModel

@{
    ViewData["Title"] = "SSIS Package Details";
}

<div class="container mt-4">
    <div class="row">
        <div class="col-md-8 mx-auto">
            <div class="card shadow">
                <div class="card-header bg-info text-white">
                    <h4 class="mb-0"><i class="fas fa-info-circle me-2"></i>SSIS Package Details</h4>
                </div>
                <div class="card-body">
                    <dl class="row">
                        <dt class="col-sm-4">Folder Name</dt>
                        <dd class="col-sm-8">@Model.FolderName</dd>
                        
                        <dt class="col-sm-4">Project Name</dt>
                        <dd class="col-sm-8">@Model.ProjectName</dd>
                        
                        <dt class="col-sm-4">Package Name</dt>
                        <dd class="col-sm-8">@Model.PackageName</dd>
                        
                        <dt class="col-sm-4">Description</dt>
                        <dd class="col-sm-8">@(Model.Description ?? "No description")</dd>
                        
                        <dt class="col-sm-4">Status</dt>
                        <dd class="col-sm-8">
                            @if (Model.Status == DataLifecycleManager.Domain.Enums.SSISPackageStatus.Active)
                            {
                                <span class="badge bg-success">Active</span>
                            }
                            else
                            {
                                <span class="badge bg-secondary">Inactive</span>
                            }
                        </dd>
                        
                        <dt class="col-sm-4">Timeout Minutes</dt>
                        <dd class="col-sm-8">@Model.TimeoutMinutes</dd>

                        <dt class="col-sm-4"><hr class="my-2"/><strong>SQL Server Connection</strong></dt>
                        <dd class="col-sm-8"><hr class="my-2"/></dd>

                        <dt class="col-sm-4">Server Address</dt>
                        <dd class="col-sm-8">@Model.ServerAddress</dd>

                        <dt class="col-sm-4">Authentication</dt>
                        <dd class="col-sm-8">
                            @if (Model.UseWindowsAuthentication)
                            {
                                <span class="badge bg-primary">Windows Authentication</span>
                            }
                            else
                            {
                                <span class="badge bg-info">SQL Server Authentication</span>
                            }
                        </dd>

                        @if (!Model.UseWindowsAuthentication && !string.IsNullOrEmpty(Model.Username))
                        {
                            <dt class="col-sm-4">Username</dt>
                            <dd class="col-sm-8">@Model.Username</dd>
                        }

                        <dt class="col-sm-4"><hr class="my-2"/><strong>Package Configuration</strong></dt>
                        <dd class="col-sm-8"><hr class="my-2"/></dd>
                        
                        <dt class="col-sm-4">Package Parameters</dt>
                        <dd class="col-sm-8">
                            @if (!string.IsNullOrEmpty(Model.PackageParameters))
                            {
                                <pre class="bg-light p-2"><code>@Model.PackageParameters</code></pre>
                            }
                            else
                            {
                                <small class="text-muted">No parameters configured</small>
                            }
                        </dd>

                        <dt class="col-sm-4"><hr class="my-2"/><strong>Execution History</strong></dt>
                        <dd class="col-sm-8"><hr class="my-2"/></dd>
                        
                        <dt class="col-sm-4">Last Execution Date</dt>
                        <dd class="col-sm-8">@(Model.LastExecutionDate?.ToString("yyyy-MM-dd HH:mm:ss") ?? "Never executed")</dd>
                        
                        <dt class="col-sm-4">Last Execution Status</dt>
                        <dd class="col-sm-8">
                            @if (Model.LastExecutionStatus.HasValue)
                            {
                                @if (Model.LastExecutionStatus == DataLifecycleManager.Domain.Enums.ExecutionStatus.Succeeded)
                                {
                                    <span class="badge bg-success">@Model.LastExecutionStatus</span>
                                }
                                else if (Model.LastExecutionStatus == DataLifecycleManager.Domain.Enums.ExecutionStatus.Failed)
                                {
                                    <span class="badge bg-danger">@Model.LastExecutionStatus</span>
                                }
                                else
                                {
                                    <span class="badge bg-warning">@Model.LastExecutionStatus</span>
                                }
                            }
                            else
                            {
                                <small class="text-muted">No execution history</small>
                            }
                        </dd>

                        <dt class="col-sm-4">Created</dt>
                        <dd class="col-sm-8">
                            @Model.CreatedAt.ToLocalTime().ToString("yyyy-MM-dd HH:mm:ss")
                            @if (!string.IsNullOrEmpty(Model.CreatedBy))
                            {
                                <text>by @Model.CreatedBy</text>
                            }
                        </dd>

                        @if (Model.LastModifiedAt.HasValue)
                        {
                            <dt class="col-sm-4">Last Modified</dt>
                            <dd class="col-sm-8">
                                @Model.LastModifiedAt.Value.ToLocalTime().ToString("yyyy-MM-dd HH:mm:ss")
                                @if (!string.IsNullOrEmpty(Model.LastModifiedBy))
                                {
                                    <text>by @Model.LastModifiedBy</text>
                                }
                            </dd>
                        }
                    </dl>

                    <div class="d-flex justify-content-between">
                        <a asp-action="Index" class="btn btn-secondary">
                            <i class="fas fa-arrow-left me-2"></i>Back to List
                        </a>
                        <div>
                            <a asp-action="Edit" asp-route-id="@Model.Id" class="btn btn-primary">
                                <i class="fas fa-edit me-2"></i>Edit
                            </a>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>